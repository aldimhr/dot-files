{
  // "[php]": { "editor.defaultFormatter": "HookyQR.beautify" },
  // "[javascript]": { "editor.defaultFormatter": null },
  "blade.format.enable": true,
  "breadcrumbs.enabled": false,
  "redhat.telemetry.enabled": true,
  "telemetry.telemetryLevel": "error",
  "files.trimTrailingWhitespace": true,
  "disable-hardware-acceleration": true,
  "extensions.autoUpdate": "onlyEnabledExtensions",
  "javascript.updateImportsOnFileMove.enabled": "always",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "yaml.schemas": {
    "file:///home/aldimhr/.vscode/extensions/atlassian.atlascode-2.10.11/resources/schemas/pipelines-schema.json": "bitbucket-pipelines.yml"
  },

  /*  -- LANGUAGE  */
  "[cpp]": {
    "editor.defaultFormatter": "ms-vscode.cpptools"
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  /*  -- EXPERIMENTAL  */
  // "workbench.experimental.settingsProfiles.enabled": true,

  /*  -- WORKBENCH  */
  // "workbench.activityBar.visible": false,
  "workbench.colorTheme": "Ayu Mirage",
  "workbench.sideBar.location": "right",
  "workbench.editor.enablePreview": false,
  "workbench.startupEditor": "newUntitledFile",
  "workbench.iconTheme": "eq-material-theme-icons-light",
  "workbench.preferredDarkColorTheme": "Ayu Mirage",
  "workbench.preferredLightColorTheme": "Ayu Light",
  "workbench.colorCustomizations": {
    "[Ayu Light]": {
      "editorLineNumber.activeForeground": "#000"
    },
    "[Ayu Mirage]": {
      "editorLineNumber.activeForeground": "#fff"
    }
  },

  /*  -- EDITOR */
  // "editor.colorDecorators": false,
  // "editor.stickyScroll.enabled": true,
  "editor.tabSize": 2,
  "editor.rulers": [100],
  "editor.lineHeight": 27,
  "editor.fontSize": 14.5,
  "editor.fontWeight": 450,
  "editor.formatOnSave": true,
  "editor.fontLigatures": true,
  "editor.formatOnPaste": true,
  "editor.minimap.enabled": false,
  "editor.lineNumbers": "relative",
  "editor.guides.bracketPairs": true,
  "editor.autoClosingQuotes": "always",
  "editor.fontFamily": "JetBrains Mono",
  "editor.bracketPairColorization.enabled": true,
  "editor.acceptSuggestionOnCommitCharacter": false,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  // "editor.experimental.stickyScroll.enabled": true, // experimental

  /*  -- EXPLORE */
  "explorer.confirmDelete": false,
  "explorer.compactFolders": false,
  "explorer.confirmDragAndDrop": false,

  /*  -- WINDOW */
  "window.zoomLevel": -1,

  /*  -- TERMINAL */
  // "terminal.integrated.defaultProfile.linux": "tmux",
  "terminal.integrated.rendererType": "dom",
  "terminal.integrated.defaultProfile.linux": "fish",

  /*  -- INDENT RAINBOW */
  "indentRainbow.colors": [
    "rgba(16,16,16,0.1)",
    "rgba(16,16,16,0.3)",
    "rgba(16,16,16,0.6)",
    "rgba(16,16,16,0.4)",
    "rgba(16,16,16,0.2)"
  ],

  /*  -- EMMET  */
  "emmet.includeLanguages": {
    "vue-html": "html",
    "javascript": "javascriptreact"
  },

  /*  -- PRETTIER  */
  // "prettier.jsxBracketSameLine": true,
  "prettier.tabWidth": 2,
  "prettier.printWidth": 100,
  "prettier.singleQuote": true,
  "prettier.htmlWhitespaceSensitivity": "ignore",

  /*  -- TAILWIND  */
  "css.validate": false,
  "scss.validate": false,
  "tailwindCSS.emmetCompletions": true,
  "tailwindCSS.includeLanguages": {
    "plaintext": "html"
  },

  /*  -- ATLAS */
  "atlascode.jira.enabled": false,
  "atlascode.bitbucket.enabled": true,
  "atlascode.bitbucket.issues.refreshInterval": 0,
  "atlascode.bitbucket.explorer.refreshInterval": 0,
  "atlascode.bitbucket.pipelines.refreshInterval": 0,

  /*  -- TURBO CONSOLE LOG
    alt+ctrl L -> add console.log
    alt+shift C -> comment all console.log
    alt+shift U -> un-comment all console.log
    alt+shift D -> delete all console.log
  */
  "turboConsoleLog.quote": "`",
  "turboConsoleLog.addSemicolonInTheEnd": true,
  "turboConsoleLog.insertEnclosingFunction": true,

  /*  -- ESLINT */
  // "editor.codeActionsOnSave": {
  //   "source.fixAll.eslint": true
  // },

  /*  -- LIVE SERVER  */
  // "liveServer.settings.donotVerifyTags": true,
  "liveServer.settings.fullReload": true,
  "liveServer.settings.donotShowInfoMsg": true,

  /*  -- VETUR  */
  "vetur.validation.template": false,

  /*  -- VIM  */
  "vim.foldfix": true,
  "vim.surround": true,
  "vim.useSystemClipboard": true,
  "vim.insertModeKeyBindings": [
    {
      "before": ["j", "k"],
      "after": ["<Esc>"]
    }
  ],

  "vim.visualModeKeyBindingsNonRecursive": [
    // turbo console log
    {
      // add console log
      "before": ["<leader>", "c", "l"],
      "commands": ["turboConsoleLog.displayLogMessage"]
    },

    // indent
    {
      "before": [">"],
      "after": [">", "g", "v"]
    },
    {
      "before": ["<"],
      "after": ["<", "g", "v"]
    },
    {
      "before": ["<leader>", "5"],
      "commands": ["editor.emmet.action.matchTag"]
    },
    // move curson in line when 'word wrap' mode
    {
      "before": ["j"],
      "after": ["g", "j"]
    },
    {
      "before": ["k"],
      "after": ["g", "k"]
    }
  ],

  "vim.normalModeKeyBindingsNonRecursive": [
    // turbo console log
    {
      // delete console log
      "before": ["<leader>", "c", "l", "d"],
      "commands": ["turboConsoleLog.deleteAllLogMessages"]
    },
    {
      // comment console log
      "before": ["<leader>", "c", "l", "c"],
      "commands": ["turboConsoleLog.commentAllLogMessages"]
    },
    {
      // un-comment console log
      "before": ["<leader>", "c", "l", "u"],
      "commands": ["turboConsoleLog.uncommentAllLogMessages"]
    },

    // move curson in line when 'word wrap' mode
    {
      "before": ["j"],
      "after": ["g", "j"]
    },
    {
      "before": ["k"],
      "after": ["g", "k"]
    },
    //   SPLIT
    {
      // resize increase +
      "before": ["<leader>", "s", "r", "="],
      "commands": ["workbench.action.increaseViewSize"]
    },
    {
      // resize decrease -
      "before": ["<leader>", "s", "r", "-"],
      "commands": ["workbench.action.decreaseViewSize"]
    },
    {
      // split right
      "before": ["<leader>", "s", "l"],
      "commands": ["workbench.action.splitEditorRight"]
    },
    {
      // split left
      "before": ["<leader>", "s", "h"],
      "commands": ["workbench.action.splitEditorLeft"]
    },
    {
      // split up
      "before": ["<leader>", "s", "k"],
      "commands": ["workbench.action.splitEditorUp"]
    },
    {
      // split down
      "before": ["<leader>", "s", "j"],
      "commands": ["workbench.action.splitEditorDown"]
    },
    {
      // split join
      "before": ["<leader>", "s", "g"],
      "commands": ["workbench.action.joinAllGroups"]
    },
    {
      // move to right
      "before": ["<leader>", "s", "m", "l"],
      "commands": ["workbench.action.moveEditorToRightGroup"]
    },
    {
      // move to left
      "before": ["<leader>", "s", "m", "h"],
      "commands": ["workbench.action.moveEditorToLeftGroup"]
    },
    {
      // focus to left
      "before": ["<leader>", "s", "f", "h"],
      "commands": ["workbench.action.focusLeftGroup"]
    },
    {
      // focus right
      "before": ["<leader>", "s", "f", "l"],
      "commands": ["workbench.action.focusRightGroup"]
    },
    {
      // focus up
      "before": ["<leader>", "s", "f", "k"],
      "commands": ["workbench.action.focusAboveGroup"]
    },
    {
      // focus down
      "before": ["<leader>", "s", "f", "j"],
      "commands": ["workbench.action.focusBelowGroup"]
    },
    {
      // single layout
      "before": ["<leader>", "s", "s"],
      "commands": ["workbench.action.editorLayoutSingle"]
    },
    // END SPLIT
    {
      // search close tag
      "before": ["<leader>", "5"],
      "commands": ["editor.emmet.action.matchTag"]
    },
    {
      // hover
      "before": ["K"],
      "commands": ["editor.action.showHover"]
    },
    {
      // toggle file panel
      "before": ["<leader>", "t"],
      "commands": ["workbench.action.toggleSidebarVisibility"]
    },
    {
      // open file panel
      "before": ["<leader>", "n"],
      "commands": ["revealInExplorer"]
    },
    {
      // close without save
      "before": ["<leader>", "q"],
      "commands": [":q!"]
    },
    {
      // close with save
      "before": ["<leader>", "w"],
      "commands": [":wq"]
    },
    {
      // move cursor to right
      "before": ["<leader>", "l"],
      "commands": ["workbench.action.nextEditor"]
    },
    {
      // move cursor to left
      "before": ["<leader>", "h"],
      "commands": ["workbench.action.previousEditor"]
    }
  ],
  "vim.leader": ",",

  /*  -- FILES VSCODE*/
  "files.watcherExclude": {
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/node_modules/**": true,
    "**/tmp/**": true,
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true,
    "**/node_modules": true,
    "**/bower_components": true,
    "**/dist/**": true,
    "**/log/**": true,
    "**/logs/**": true,
    "**/.fdk/**": true
  },
  "files.exclude": {
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/node_modules/**": true,
    "**/tmp/**": true,
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true,
    "**/node_modules": true,
    "**/bower_components": true,
    // "**/dist/**": true,
    "**/log/**": true,
    "**/.fdk/**": true
  },
  "search.exclude": {
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/node_modules/**": true,
    "**/tmp/**": true,
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true,
    "**/node_modules": true,
    "**/bower_components": true,
    "**/dist/**": true,
    "**/log/**": true
  }
}
